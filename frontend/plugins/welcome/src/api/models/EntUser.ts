/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntHooks,
    EntHooksFromJSON,
    EntHooksFromJSONTyped,
    EntHooksToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntUser
 */
export interface EntUser {
    /**
     * Age holds the value of the "age" field.
     * @type {number}
     * @memberof EntUser
     */
    age?: number;
    /**
     * debug enable a debug logging.
     * @type {boolean}
     * @memberof EntUser
     */
    debug?: boolean;
    /**
     * driver used for executing database requests.
     * @type {string}
     * @memberof EntUser
     */
    driver?: string;
    /**
     * 
     * @type {EntHooks}
     * @memberof EntUser
     */
    hooks?: EntHooks;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntUser
     */
    id?: number;
    /**
     * Name holds the value of the "name" field.
     * @type {string}
     * @memberof EntUser
     */
    name?: string;
}

export function EntUserFromJSON(json: any): EntUser {
    return EntUserFromJSONTyped(json, false);
}

export function EntUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'age': !exists(json, 'age') ? undefined : json['age'],
        'debug': !exists(json, 'debug') ? undefined : json['debug'],
        'driver': !exists(json, 'driver') ? undefined : json['driver'],
        'hooks': !exists(json, 'hooks') ? undefined : EntHooksFromJSON(json['hooks']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function EntUserToJSON(value?: EntUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'age': value.age,
        'debug': value.debug,
        'driver': value.driver,
        'hooks': EntHooksToJSON(value.hooks),
        'id': value.id,
        'name': value.name,
    };
}


